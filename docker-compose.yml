version: '3.4'

volumes:
  mysql:
  postgresql:
  elasticsearch-old:
  rabbitmq:

services:
  redis:
    image: "redis:alpine"

  postgres:
    image: postgres:11-alpine
    healthcheck:
      test:
        [
            CMD,
            psql,
            -d,
            "postgres://postgres:thepgpassword@localhost:5432",
            -c,
            "select 1",
        ]
    volumes:
      - postgresql:/var/lib/postgresql/data
      - ./localSetup/projects/postgres/postgresinit.d:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: thepgpassword
    ports:
      - 5432:5432

  mysql:
    image: mariadb:10.3
    environment:
      MYSQL_ROOT_PASSWORD: mysqlpassword
      MYSQL_INITDB_SKIP_TZINFO: 1
    healthcheck:
      test: [CMD, mysql, -uroot, -pmysqlpassword, "-eSELECT 1"]
    command: --init-file /data/application/init.sql
    volumes:
      - ./localSetup/projects/mysql/init.sql:/data/application/init.sql
      - mysql:/var/lib/mysql
    ports:
      - "3306:3306"

  elasticsearch-old:
    image: "docker.elastic.co/elasticsearch/elasticsearch:5.5.3"
    volumes:
      - ./localSetup/projects/elasticsearch-old/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - elasticsearch-old:/usr/share/elasticsearch/data
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms128m -Xmx384m"

  rabbitmq:
    image: rabbitmq:3-management
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    ports:
      - 5673:5673
      - 5672:5672
      - 15672:15672

  nginx:
    build: ./localSetup/projects/nginx
    command: ["nginx", "-g", "daemon off;"]
    entrypoint: ["/docker-entrypoint.sh"]
    healthcheck:
      test: [CMD, curl, -fk, https://localhost]
    volumes:
      - ./localSetup/projects/nginx/nginx-conf.d:/etc/nginx/conf.d:ro
      - ./localSetup/projects/nginx/entrypoint.sh:/docker-entrypoint.sh
      - ./data/nginx/ca:/etc/ca
      - ./data/nginx/certs:/etc/ssl/private
    ports:
      - "80:80"
      - "443:443"
    networks:
      default:
        aliases:
          - edstep.local

  configserver:
    image: "hyness/spring-cloud-config-server:1.4.7.RELEASE"
    volumes:
      - ./localSetup/projects/config-server/settings:/config
    environment:
      SPRING_PROFILES_ACTIVE: native
    ports:
      - 8888:8888

  indexingservice:
    image: "dockerregistry.cerpus.net/cerpus/indexingservice:82edbc57e74208f164b532af8e0bfe90"
    environment:
      CONFIGSERVICE_URI: http://configserver:8888
      HEAPSPACE_MAX: 256m
    depends_on:
      - postgres
      - elasticsearch-old
      - configserver
    volumes:
      - ./localSetup/helpers/start-scripts:/start-scripts
    entrypoint: "/bin/sh -c '/start-scripts/wait-for-multiple.sh postgres:5432 configserver:8888 elasticsearch-old:9300;/start-app.sh'"
    ports:
      - 8093:8093

  edstep:
    build:
      context: ./sourcecode/not_migrated/cerpuscourse
      dockerfile: Dockerfile
      target: app
    environment:
      PHP_FPM_HOST: "edstep-fpm:31004"
    depends_on:
      - edstep-fpm
    volumes:
      - ./sourcecode/not_migrated/cerpuscourse/public:/app/public

  edstep-fpm:
    build:
      context: ./sourcecode/not_migrated/cerpuscourse
      dockerfile: Dockerfile
      target: phpfpm
    command: /bin/bash -c "set -eux;update-ca-certificates;/start-scripts/wait-for-multiple.sh mysql:3306 redis:6379;cd /app; composer install; php artisan migrate --force; php-fpm -R -F -O"
    volumes:
      - ./sourcecode/not_migrated/cerpuscourse/composer.json:/app/composer.json
      - ./sourcecode/not_migrated/cerpuscourse/composer.lock:/app/composer.lock
      - ./sourcecode/not_migrated/cerpuscourse/app:/app/app
      - ./sourcecode/not_migrated/cerpuscourse/routes:/app/routes
      - ./sourcecode/not_migrated/cerpuscourse/resources:/app/resources
      - ./sourcecode/not_migrated/cerpuscourse/public:/app/public
      - ./sourcecode/not_migrated/cerpuscourse/config:/app/config
      - ./localSetup/projects/edstep/.env:/app/.env
      - ./data/edstep/storage:/storage
      - ./localSetup/projects/edstep/edstep.conf:/etc/apache2/sites-enabled/001-edstep.conf
      - ./localSetup/helpers/start-scripts:/start-scripts
      - ./data/nginx/ca/cacert.pem:/usr/local/share/ca-certificates/dev-cacert.crt:ro
    depends_on:
      - mysql
      - redis

  edstep-init:
    build:
      context: ./sourcecode/not_migrated/cerpuscourse
      dockerfile: Dockerfile
      target: init
    command: /bin/bash -c "set -eux;/start.sh;/init.sh"
    volumes:
      - ./sourcecode/not_migrated/cerpuscourse:/app
      - ./localSetup/projects/edstep/.env:/app/.env
      - ./localSetup/projects/edstep/start.sh:/start.sh
      - ./data/edstep/storage:/storage

  edstep-cron:
    build:
      context: ./sourcecode/not_migrated/cerpuscourse
      dockerfile: Dockerfile
      target: cron
    volumes:
      - ./sourcecode/not_migrated/cerpuscourse:/app
      - ./localSetup/projects/edstep/.env:/app/.env
      - ./data/edstep/storage:/storage
      - ./localSetup/helpers/start-scripts:/start-scripts
    depends_on:
      - edstep-fpm
